// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  snippets    CodeSnippet[]
  folders     Folder[]
  files       File[]
  chatThreads ChatThread[]
}

model CodeSnippet {
  id        String   @id @default(uuid())
  content   String
  language  String   @default("typescript")
  filename  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
}

model Folder {
  id        String    @id @default(uuid())
  name      String
  parentId  String?   // For nested folders
  parent    Folder?   @relation("FolderToFolder", fields: [parentId], references: [id])
  children  Folder[]  @relation("FolderToFolder")
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String
  files     File[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model File {
  id        String    @id @default(uuid())
  name      String
  content   String?
  folder    Folder?   @relation(fields: [folderId], references: [id])
  folderId  String?
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ChatThread {
  id        String    @id @default(uuid())
  title     String
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String
  messages  ChatMessage[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ChatMessage {
  id          String      @id @default(uuid())
  content     String
  sender      String
  thread      ChatThread  @relation(fields: [threadId], references: [id])
  threadId    String
  createdAt   DateTime    @default(now())
}
